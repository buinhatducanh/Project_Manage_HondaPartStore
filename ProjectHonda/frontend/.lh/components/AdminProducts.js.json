{
    "sourceFile": "components/AdminProducts.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 53,
            "patches": [
                {
                    "date": 1739376852961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739724519913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,12 @@\n-import React, { useState } from \"react\";\r\n+import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n+\r\n+  useEffect(() => {\r\n+    \r\n+  })\r\n+  \r\n   const [products, setProducts] = useState([\r\n     { id: 1, name: \"Lốp xe Honda\", price: \"500,000 VND\", stock: 10 },\r\n     { id: 2, name: \"Phanh đĩa Honda\", price: \"300,000 VND\", stock: 5 },\r\n   ]);\r\n"
                },
                {
                    "date": 1739724620420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,13 @@\n import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n+  const [products, setProducts] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n     \r\n   })\r\n   \r\n-  const [products, setProducts] = useState([\r\n-    { id: 1, name: \"Lốp xe Honda\", price: \"500,000 VND\", stock: 10 },\r\n-    { id: 2, name: \"Phanh đĩa Honda\", price: \"300,000 VND\", stock: 5 },\r\n-  ]);\r\n   const [newProduct, setNewProduct] = useState({ name: \"\", price: \"\", stock: \"\" });\r\n \r\n   const handleAddProduct = () => {\r\n     if (!newProduct.name || !newProduct.price || !newProduct.stock) return;\r\n"
                },
                {
                    "date": 1739724988466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,17 @@\n+import axios from \"axios\";\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    \r\n+    const fetchProducts = async() =>{\r\n+      const {data} = await axios.get(\"http://localhost:5000/api/products\");\r\n+      \r\n+    }\r\n   })\r\n-  \r\n+\r\n   const [newProduct, setNewProduct] = useState({ name: \"\", price: \"\", stock: \"\" });\r\n \r\n   const handleAddProduct = () => {\r\n     if (!newProduct.name || !newProduct.price || !newProduct.stock) return;\r\n"
                },
                {
                    "date": 1739725039617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,17 @@\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    const fetchProducts = async() =>{\r\n-      const {data} = await axios.get(\"http://localhost:5000/api/products\");\r\n-      \r\n+    try {\r\n+      const fetchProducts = async() =>{\r\n+        const {data} = await axios.get(\"http://localhost:5000/api/products\");\r\n+        setProducts(data);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n     }\r\n+    \r\n   })\r\n \r\n   const [newProduct, setNewProduct] = useState({ name: \"\", price: \"\", stock: \"\" });\r\n \r\n"
                },
                {
                    "date": 1739725088527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,23 +12,12 @@\n       }\r\n     } catch (error) {\r\n       console.log(error);\r\n     }\r\n-    \r\n+    fetchProducts();\r\n   })\r\n \r\n-  const [newProduct, setNewProduct] = useState({ name: \"\", price: \"\", stock: \"\" });\r\n \r\n-  const handleAddProduct = () => {\r\n-    if (!newProduct.name || !newProduct.price || !newProduct.stock) return;\r\n-    setProducts([...products, { id: products.length + 1, ...newProduct }]);\r\n-    setNewProduct({ name: \"\", price: \"\", stock: \"\" });\r\n-  };\r\n-\r\n-  const handleDeleteProduct = (id) => {\r\n-    setProducts(products.filter((product) => product.id !== id));\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"container mx-auto p-6\">\r\n       <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n       <table className=\"w-full border border-collapse border-gray-300\">\r\n"
                },
                {
                    "date": 1739725098271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     } catch (error) {\r\n       console.log(error);\r\n     }\r\n     fetchProducts();\r\n-  })\r\n+  }, [])\r\n \r\n \r\n   return (\r\n     <div className=\"container mx-auto p-6\">\r\n"
                },
                {
                    "date": 1739725114692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n       }\r\n     } catch (error) {\r\n       console.log(error);\r\n     }\r\n+\r\n     fetchProducts();\r\n   }, [])\r\n \r\n \r\n"
                },
                {
                    "date": 1739725164523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,15 @@\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    try {\r\n-      const fetchProducts = async() =>{\r\n-        const {data} = await axios.get(\"http://localhost:5000/api/products\");\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n         setProducts(data);\r\n+      } catch (error) {\r\n+        console.log(error);\r\n       }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n     }\r\n \r\n     fetchProducts();\r\n   }, [])\r\n"
                },
                {
                    "date": 1739725181035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             <tr key={product.id} className=\"text-center\">\r\n               <td className=\"border p-2\">{product.id}</td>\r\n               <td className=\"border p-2\">{product.name}</td>\r\n               <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{product.stock}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">\r\n                 <button\r\n                   onClick={() => handleDeleteProduct(product.id)}\r\n                   className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n"
                },
                {
                    "date": 1739725215459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,37 +49,8 @@\n             </tr>\r\n           ))}\r\n         </tbody>\r\n       </table>\r\n-      <div className=\"mt-4\">\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Tên sản phẩm\"\r\n-          value={newProduct.name}\r\n-          onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}\r\n-          className=\"border p-2 mr-2\"\r\n-        />\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Giá\"\r\n-          value={newProduct.price}\r\n-          onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}\r\n-          className=\"border p-2 mr-2\"\r\n-        />\r\n-        <input\r\n-          type=\"number\"\r\n-          placeholder=\"Kho hàng\"\r\n-          value={newProduct.stock}\r\n-          onChange={(e) => setNewProduct({ ...newProduct, stock: e.target.value })}\r\n-          className=\"border p-2 mr-2\"\r\n-        />\r\n-        <button\r\n-          onClick={handleAddProduct}\r\n-          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n-        >\r\n-          Thêm sản phẩm\r\n-        </button>\r\n-      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739725292096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n             </tr>\r\n           ))}\r\n         </tbody>\r\n       </table>\r\n+\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739725311448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n         const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n+        console.log(data);\r\n         setProducts(data);\r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1739725368290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,8 @@\n               <td className=\"border p-2\">{product.price}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">\r\n                 <button\r\n-                  onClick={() => handleDeleteProduct(product.id)}\r\n                   className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                 >\r\n                   Xóa\r\n                 </button>\r\n"
                },
                {
                    "date": 1739725418974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import axios from \"axios\";\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n-  const [products, setProducts] = useState(\"\");\r\n+  const [products, setProducts] = useState([]);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n"
                },
                {
                    "date": 1739725466466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,23 +32,27 @@\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product.id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.id}</td>\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">\r\n-                <button\r\n-                  className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n-                >\r\n-                  Xóa\r\n-                </button>\r\n-              </td>\r\n+          {Array.isArray(products) ? (\r\n+            products.map((product) => (\r\n+              <tr key={product.id} className=\"text-center\">\r\n+                <td className=\"border p-2\">{product.id}</td>\r\n+                <td className=\"border p-2\">{product.name}</td>\r\n+                <td className=\"border p-2\">{product.price}</td>\r\n+                <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">\r\n+                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                    Xóa\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))\r\n+          ) : (\r\n+            <tr>\r\n+              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n             </tr>\r\n-          ))}\r\n+          )}\r\n         </tbody>\r\n       </table>\r\n \r\n     </div>\r\n"
                },
                {
                    "date": 1739725503411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         </thead>\r\n         <tbody>\r\n           {Array.isArray(products) ? (\r\n             products.map((product) => (\r\n-              <tr key={product.id} className=\"text-center\">\r\n+              <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.id}</td>\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n"
                },
                {
                    "date": 1739725568711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n         <tbody>\r\n           {Array.isArray(products) ? (\r\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.id}</td>\r\n+                <td className=\"border p-2\">{product._id}</td>\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">\r\n"
                },
                {
                    "date": 1739725591061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n       <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n       <table className=\"w-full border border-collapse border-gray-300\">\r\n         <thead>\r\n           <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">ID</th>\r\n             <th className=\"border p-2\">Tên sản phẩm</th>\r\n             <th className=\"border p-2\">Giá</th>\r\n             <th className=\"border p-2\">Kho hàng</th>\r\n             <th className=\"border p-2\">Hành động</th>\r\n@@ -35,9 +34,8 @@\n         <tbody>\r\n           {Array.isArray(products) ? (\r\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product._id}</td>\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">\r\n"
                },
                {
                    "date": 1739725615435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n           <tr className=\"bg-gray-200\">\r\n             <th className=\"border p-2\">Tên sản phẩm</th>\r\n             <th className=\"border p-2\">Giá</th>\r\n             <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n"
                },
                {
                    "date": 1739725632762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n                   <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n                     Xóa\r\n                   </button>\r\n"
                },
                {
                    "date": 1739725676885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n         <thead>\r\n           <tr className=\"bg-gray-200\">\r\n             <th className=\"border p-2\">Tên sản phẩm</th>\r\n             <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">hãng</th>\r\n             <th className=\"border p-2\">Kho hàng</th>\r\n             <th className=\"border p-2\">Xuất xứ</th>\r\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n"
                },
                {
                    "date": 1739725690140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n+        console.log(data);\r\n+        setProducts(data);\r\n+      } catch (error) {\r\n+        console.log(error);\r\n+      }\r\n+    }\r\n+\r\n+    fetchProducts();\r\n+  }, [])\r\n+\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {Array.isArray(products) ? (\r\n+            products.map((product) => (\r\n+              <tr key={product._id} className=\"text-center\">\r\n+                <td className=\"border p-2\">{product.name}</td>\r\n+                <td className=\"border p-2\">{product.price}</td>\r\n+                <td className=\"border p-2\">{product.brand.name}</td>\r\n+                <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">{product.madein}</td>\r\n+                <td className=\"border p-2\">\r\n+                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                    Xóa\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))\r\n+          ) : (\r\n+            <tr>\r\n+              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n+            </tr>\r\n+          )}\r\n+        </tbody>\r\n+      </table>\r\n+\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739725705373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n+        console.log(data);\r\n+        setProducts(data);\r\n+      } catch (error) {\r\n+        console.log(error);\r\n+      }\r\n+    }\r\n+\r\n+    fetchProducts();\r\n+  }, [])\r\n+\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {Array.isArray(products) ? (\r\n+            products.map((product) => (\r\n+              <tr key={product._id} className=\"text-center\">\r\n+                <td className=\"border p-2\">{product.name}</td>\r\n+                <td className=\"border p-2\">{product.price}</td>\r\n+                <td className=\"border p-2\">{product.brand}</td>\r\n+                <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">{product.madein}</td>\r\n+                <td className=\"border p-2\">\r\n+                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                    Xóa\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))\r\n+          ) : (\r\n+            <tr>\r\n+              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n+            </tr>\r\n+          )}\r\n+        </tbody>\r\n+      </table>\r\n+\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739725713860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">{product.brand}</td>\r\n+                <td className=\"border p-2\">{product.brand._id}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n                   <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n@@ -61,131 +61,4 @@\n   );\r\n };\r\n \r\n export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(data);\r\n-        setProducts(data);\r\n-      } catch (error) {\r\n-        console.log(error);\r\n-      }\r\n-    }\r\n-\r\n-    fetchProducts();\r\n-  }, [])\r\n-\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {Array.isArray(products) ? (\r\n-            products.map((product) => (\r\n-              <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.name}</td>\r\n-                <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">{product.brand.name}</td>\r\n-                <td className=\"border p-2\">{product.quantity}</td>\r\n-                <td className=\"border p-2\">{product.madein}</td>\r\n-                <td className=\"border p-2\">\r\n-                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n-                    Xóa\r\n-                  </button>\r\n-                </td>\r\n-              </tr>\r\n-            ))\r\n-          ) : (\r\n-            <tr>\r\n-              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n-            </tr>\r\n-          )}\r\n-        </tbody>\r\n-      </table>\r\n-\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(data);\r\n-        setProducts(data);\r\n-      } catch (error) {\r\n-        console.log(error);\r\n-      }\r\n-    }\r\n-\r\n-    fetchProducts();\r\n-  }, [])\r\n-\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {Array.isArray(products) ? (\r\n-            products.map((product) => (\r\n-              <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.name}</td>\r\n-                <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">{product.quantity}</td>\r\n-                <td className=\"border p-2\">{product.madein}</td>\r\n-                <td className=\"border p-2\">\r\n-                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n-                    Xóa\r\n-                  </button>\r\n-                </td>\r\n-              </tr>\r\n-            ))\r\n-          ) : (\r\n-            <tr>\r\n-              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n-            </tr>\r\n-          )}\r\n-        </tbody>\r\n-      </table>\r\n-\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminProducts;\r\n"
                },
                {
                    "date": 1739725895060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">{product.brand._id}</td>\r\n+                <td className=\"border p-2\">{product.brand.name}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n                   <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n"
                },
                {
                    "date": 1739725903414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">{product.brand.name}</td>\r\n+                <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n                   <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n"
                },
                {
                    "date": 1739731248762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,14 @@\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n+                <td className=\"border p-2\">\r\n+                  {product.brand.length > 0\r\n+                    ? product.brand.map((b) => b.name).join(\", \")\r\n+                    : \"Không có hãng\"}\r\n+                </td>\r\n+\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n                   <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n"
                },
                {
                    "date": 1739731258911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n+        console.log(data);\r\n+        setProducts(data);\r\n+      } catch (error) {\r\n+        console.log(error);\r\n+      }\r\n+    }\r\n+\r\n+    fetchProducts();\r\n+  }, [])\r\n+\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {Array.isArray(products) ? (\r\n+            products.map((product) => (\r\n+              <tr key={product._id} className=\"text-center\">\r\n+                <td className=\"border p-2\">{product.name}</td>\r\n+                <td className=\"border p-2\">{product.price}</td>\r\n+                <td className=\"border p-2\">\r\n+                  {product.brand.length > 0\r\n+                    ? product.brand.map((b) => b.name).join(\", \")\r\n+                    : \"Không có hãng\"}\r\n+                </td>\r\n+                <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">{product.madein}</td>\r\n+                <td className=\"border p-2\">\r\n+                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                    Xóa\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))\r\n+          ) : (\r\n+            <tr>\r\n+              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n+            </tr>\r\n+          )}\r\n+        </tbody>\r\n+      </table>\r\n+\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739731309474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n+        console.log(data);\r\n+        setProducts(data);\r\n+      } catch (error) {\r\n+        console.log(error);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {Array.isArray(products) ? (\r\n+            products.map((product) => (\r\n+              <tr key={product._id} className=\"text-center\">\r\n+                <td className=\"border p-2\">{product.name}</td>\r\n+                <td className=\"border p-2\">{product.price}</td>\r\n+                <td className=\"border p-2\">\r\n+                  {product.brand.length > 0\r\n+                    ? product.brand.map((b) => b.name).join(\", \")\r\n+                    : \"Không có hãng\"}\r\n+                </td>\r\n+                <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">{product.madein}</td>\r\n+                <td className=\"border p-2\">\r\n+                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                    Xóa\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))\r\n+          ) : (\r\n+            <tr>\r\n+              <td colSpan=\"6\" className=\"text-center p-4 text-gray-500\">\r\n+                Không có sản phẩm nào.\r\n+              </td>\r\n+            </tr>\r\n+          )}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739731459543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n+        console.log(data);\r\n+        setProducts(data);\r\n+      } catch (error) {\r\n+        console.log(error);\r\n+      }\r\n+    }\r\n+\r\n+    fetchProducts();\r\n+  }, [])\r\n+\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {Array.isArray(products) ? (\r\n+            products.map((product) => (\r\n+              <tr key={product._id} className=\"text-center\">\r\n+                <td className=\"border p-2\">{product.name}</td>\r\n+                <td className=\"border p-2\">{product.price}</td>\r\n+                <td className=\"border p-2\">\r\n+                  {product.brand?.name || \"Không có hãng\"}\r\n+                </td>\r\n+\r\n+                <td className=\"border p-2\">{product.quantity}</td>\r\n+                <td className=\"border p-2\">{product.madein}</td>\r\n+                <td className=\"border p-2\">\r\n+                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                    Xóa\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))\r\n+          ) : (\r\n+            <tr>\r\n+              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n+            </tr>\r\n+          )}\r\n+        </tbody>\r\n+      </table>\r\n+\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739795059212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,87 +2,59 @@\n import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState({}); // Lưu brands dưới dạng object { brandId: brandName }\r\n \r\n   useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n+    const fetchBrands = async () => {\r\n       try {\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(data);\r\n-        setProducts(data);\r\n-      } catch (error) {\r\n-        console.log(error);\r\n-      }\r\n-    }\r\n+        // Kiểm tra xem đã có dữ liệu trong Local Storage chưa\r\n+        const storedBrands = localStorage.getItem(\"brands\");\r\n \r\n-    fetchProducts();\r\n-  }, [])\r\n+        if (storedBrands) {\r\n+          const parsedBrands = JSON.parse(storedBrands);\r\n+          if (Array.isArray(parsedBrands)) {\r\n+            console.log(\"Lấy brands từ Local Storage\");\r\n+            setBrands(\r\n+              parsedBrands.reduce((acc, brand) => {\r\n+                acc[brand._id] = brand.name;\r\n+                return acc;\r\n+              }, {})\r\n+            );\r\n+            return; // Không gọi API nếu có sẵn dữ liệu\r\n+          }\r\n+        }\r\n \r\n+        // Nếu chưa có dữ liệu hợp lệ, gọi API để lấy brands\r\n+        const { data } = await axios.get(\"http://localhost:5000/api/brands\");\r\n+        console.log(\"Lấy brands từ API:\", data);\r\n \r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {Array.isArray(products) ? (\r\n-            products.map((product) => (\r\n-              <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.name}</td>\r\n-                <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">\r\n-                  {product.brand?.name || \"Không có hãng\"}\r\n-                </td>\r\n+        if (Array.isArray(data)) {\r\n+          localStorage.setItem(\"brands\", JSON.stringify(data)); // Lưu vào Local Storage\r\n+          setBrands(\r\n+            data.reduce((acc, brand) => {\r\n+              acc[brand._id] = brand.name;\r\n+              return acc;\r\n+            }, {})\r\n+          );\r\n+        }\r\n+      } catch (error) {\r\n+        console.error(\"Lỗi khi tải danh sách thương hiệu\", error);\r\n+      }\r\n+    };\r\n \r\n-                <td className=\"border p-2\">{product.quantity}</td>\r\n-                <td className=\"border p-2\">{product.madein}</td>\r\n-                <td className=\"border p-2\">\r\n-                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n-                    Xóa\r\n-                  </button>\r\n-                </td>\r\n-              </tr>\r\n-            ))\r\n-          ) : (\r\n-            <tr>\r\n-              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n-            </tr>\r\n-          )}\r\n-        </tbody>\r\n-      </table>\r\n-\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n         const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(data);\r\n+        console.log(\"Sản phẩm:\", data);\r\n         setProducts(data);\r\n       } catch (error) {\r\n-        console.log(error);\r\n+        console.error(\"Lỗi khi tải danh sách sản phẩm\", error);\r\n       }\r\n     };\r\n \r\n+    fetchBrands();\r\n     fetchProducts();\r\n   }, []);\r\n \r\n   return (\r\n@@ -99,17 +71,15 @@\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n-          {Array.isArray(products) ? (\r\n+          {Array.isArray(products) && products.length > 0 ? (\r\n             products.map((product) => (\r\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n                 <td className=\"border p-2\">\r\n-                  {product.brand.length > 0\r\n-                    ? product.brand.map((b) => b.name).join(\", \")\r\n-                    : \"Không có hãng\"}\r\n+                  {brands[product.brandId] || \"Không có hãng\"}\r\n                 </td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n@@ -132,141 +102,4 @@\n   );\r\n };\r\n \r\n export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(data);\r\n-        setProducts(data);\r\n-      } catch (error) {\r\n-        console.log(error);\r\n-      }\r\n-    }\r\n-\r\n-    fetchProducts();\r\n-  }, [])\r\n-\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {Array.isArray(products) ? (\r\n-            products.map((product) => (\r\n-              <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.name}</td>\r\n-                <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">\r\n-                  {product.brand.length > 0\r\n-                    ? product.brand.map((b) => b.name).join(\", \")\r\n-                    : \"Không có hãng\"}\r\n-                </td>\r\n-                <td className=\"border p-2\">{product.quantity}</td>\r\n-                <td className=\"border p-2\">{product.madein}</td>\r\n-                <td className=\"border p-2\">\r\n-                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n-                    Xóa\r\n-                  </button>\r\n-                </td>\r\n-              </tr>\r\n-            ))\r\n-          ) : (\r\n-            <tr>\r\n-              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n-            </tr>\r\n-          )}\r\n-        </tbody>\r\n-      </table>\r\n-\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(data);\r\n-        setProducts(data);\r\n-      } catch (error) {\r\n-        console.log(error);\r\n-      }\r\n-    }\r\n-\r\n-    fetchProducts();\r\n-  }, [])\r\n-\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {Array.isArray(products) ? (\r\n-            products.map((product) => (\r\n-              <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.name}</td>\r\n-                <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">\r\n-                  {product.brand.length > 0\r\n-                    ? product.brand.map((b) => b.name).join(\", \")\r\n-                    : \"Không có hãng\"}\r\n-                </td>\r\n-\r\n-                <td className=\"border p-2\">{product.quantity}</td>\r\n-                <td className=\"border p-2\">{product.madein}</td>\r\n-                <td className=\"border p-2\">\r\n-                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n-                    Xóa\r\n-                  </button>\r\n-                </td>\r\n-              </tr>\r\n-            ))\r\n-          ) : (\r\n-            <tr>\r\n-              <td colSpan=\"5\" className=\"text-center p-4 text-gray-500\">Không có sản phẩm nào.</td>\r\n-            </tr>\r\n-          )}\r\n-        </tbody>\r\n-      </table>\r\n-\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminProducts;\r\n"
                },
                {
                    "date": 1739795225562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n         if (storedBrands) {\r\n           const parsedBrands = JSON.parse(storedBrands);\r\n           if (Array.isArray(parsedBrands)) {\r\n-            console.log(\"Lấy brands từ Local Storage\");\r\n+            console.log(\"Lấy brands từ Local Storage: \", parsedBrands);\r\n             setBrands(\r\n               parsedBrands.reduce((acc, brand) => {\r\n                 acc[brand._id] = brand.name;\r\n                 return acc;\r\n"
                },
                {
                    "date": 1739796013353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n               <tr key={product._id} className=\"text-center\">\r\n                 <td className=\"border p-2\">{product.name}</td>\r\n                 <td className=\"border p-2\">{product.price}</td>\r\n                 <td className=\"border p-2\">\r\n-                  {brands[product.brandId] || \"Không có hãng\"}\r\n+                  {brands[product.brand] || \"Không có hãng\"}\r\n                 </td>\r\n                 <td className=\"border p-2\">{product.quantity}</td>\r\n                 <td className=\"border p-2\">{product.madein}</td>\r\n                 <td className=\"border p-2\">\r\n"
                },
                {
                    "date": 1739796271117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,52 +2,50 @@\n import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState({}); // Lưu brands dưới dạng object { brandId: brandName }\r\n+  const [brands, setBrands] = useState({});\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n \r\n   useEffect(() => {\r\n     const fetchBrands = async () => {\r\n       try {\r\n-        // Kiểm tra xem đã có dữ liệu trong Local Storage chưa\r\n         const storedBrands = localStorage.getItem(\"brands\");\r\n-\r\n         if (storedBrands) {\r\n           const parsedBrands = JSON.parse(storedBrands);\r\n           if (Array.isArray(parsedBrands)) {\r\n-            console.log(\"Lấy brands từ Local Storage: \", parsedBrands);\r\n             setBrands(\r\n               parsedBrands.reduce((acc, brand) => {\r\n                 acc[brand._id] = brand.name;\r\n                 return acc;\r\n               }, {})\r\n             );\r\n-            return; // Không gọi API nếu có sẵn dữ liệu\r\n+            return;\r\n           }\r\n         }\r\n-\r\n-        // Nếu chưa có dữ liệu hợp lệ, gọi API để lấy brands\r\n         const { data } = await axios.get(\"http://localhost:5000/api/brands\");\r\n-        console.log(\"Lấy brands từ API:\", data);\r\n-\r\n-        if (Array.isArray(data)) {\r\n-          localStorage.setItem(\"brands\", JSON.stringify(data)); // Lưu vào Local Storage\r\n-          setBrands(\r\n-            data.reduce((acc, brand) => {\r\n-              acc[brand._id] = brand.name;\r\n-              return acc;\r\n-            }, {})\r\n-          );\r\n-        }\r\n+        localStorage.setItem(\"brands\", JSON.stringify(data));\r\n+        setBrands(\r\n+          data.reduce((acc, brand) => {\r\n+            acc[brand._id] = brand.name;\r\n+            return acc;\r\n+          }, {})\r\n+        );\r\n       } catch (error) {\r\n         console.error(\"Lỗi khi tải danh sách thương hiệu\", error);\r\n       }\r\n     };\r\n \r\n     const fetchProducts = async () => {\r\n       try {\r\n         const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        console.log(\"Sản phẩm:\", data);\r\n         setProducts(data);\r\n       } catch (error) {\r\n         console.error(\"Lỗi khi tải danh sách sản phẩm\", error);\r\n       }\r\n@@ -56,11 +54,60 @@\n     fetchBrands();\r\n     fetchProducts();\r\n   }, []);\r\n \r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"container mx-auto p-6\">\r\n       <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {Object.keys(brands).map((id) => (\r\n+            <option key={id} value={id}>{brands[id]}</option>\r\n+          ))}\r\n+        </select>\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n       <table className=\"w-full border border-collapse border-gray-300\">\r\n         <thead>\r\n           <tr className=\"bg-gray-200\">\r\n             <th className=\"border p-2\">Tên sản phẩm</th>\r\n@@ -71,32 +118,21 @@\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n-          {Array.isArray(products) && products.length > 0 ? (\r\n-            products.map((product) => (\r\n-              <tr key={product._id} className=\"text-center\">\r\n-                <td className=\"border p-2\">{product.name}</td>\r\n-                <td className=\"border p-2\">{product.price}</td>\r\n-                <td className=\"border p-2\">\r\n-                  {brands[product.brand] || \"Không có hãng\"}\r\n-                </td>\r\n-                <td className=\"border p-2\">{product.quantity}</td>\r\n-                <td className=\"border p-2\">{product.madein}</td>\r\n-                <td className=\"border p-2\">\r\n-                  <button className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n-                    Xóa\r\n-                  </button>\r\n-                </td>\r\n-              </tr>\r\n-            ))\r\n-          ) : (\r\n-            <tr>\r\n-              <td colSpan=\"6\" className=\"text-center p-4 text-gray-500\">\r\n-                Không có sản phẩm nào.\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n             </tr>\r\n-          )}\r\n+          ))}\r\n         </tbody>\r\n       </table>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1739796690090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import React, { useEffect, useState } from \"react\";\r\n \r\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState({});\r\n+  const [brands, setBrands] = useState([]);\r\n   const [formData, setFormData] = useState({\r\n     name: \"\",\r\n     price: \"\",\r\n     brand: \"\",\r\n"
                },
                {
                    "date": 1739798765878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,9 @@\n             <th className=\"border p-2\">Giá</th>\r\n             <th className=\"border p-2\">Hãng</th>\r\n             <th className=\"border p-2\">Kho hàng</th>\r\n             <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n"
                },
                {
                    "date": 1739798783159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,8 +126,9 @@\n               <td className=\"border p-2\">{product.price}</td>\r\n               <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">{product.categories}</td>\r\n               <td className=\"border p-2\">\r\n                 <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n                 <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n"
                },
                {
                    "date": 1739798803275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n               <td className=\"border p-2\">{product.price}</td>\r\n               <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{product.categories}</td>\r\n+              <td className=\"border p-2\">{[product.categories]}</td>\r\n               <td className=\"border p-2\">\r\n                 <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n                 <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n"
                },
                {
                    "date": 1739798810819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n               <td className=\"border p-2\">{product.price}</td>\r\n               <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{[product.categories]}</td>\r\n+              <td className=\"border p-2\">{product.categories}</td>\r\n               <td className=\"border p-2\">\r\n                 <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n                 <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n"
                },
                {
                    "date": 1739798874041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,14 +30,9 @@\n           }\r\n         }\r\n         const { data } = await axios.get(\"http://localhost:5000/api/brands\");\r\n         localStorage.setItem(\"brands\", JSON.stringify(data));\r\n-        setBrands(\r\n-          data.reduce((acc, brand) => {\r\n-            acc[brand._id] = brand.name;\r\n-            return acc;\r\n-          }, {})\r\n-        );\r\n+        setBrands(data);\r\n       } catch (error) {\r\n         console.error(\"Lỗi khi tải danh sách thương hiệu\", error);\r\n       }\r\n     };\r\n"
                },
                {
                    "date": 1739798924617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,42 +13,47 @@\n   });\r\n   const [editingProduct, setEditingProduct] = useState(null);\r\n \r\n   useEffect(() => {\r\n-    const fetchBrands = async () => {\r\n-      try {\r\n-        const storedBrands = localStorage.getItem(\"brands\");\r\n-        if (storedBrands) {\r\n-          const parsedBrands = JSON.parse(storedBrands);\r\n-          if (Array.isArray(parsedBrands)) {\r\n-            setBrands(\r\n-              parsedBrands.reduce((acc, brand) => {\r\n-                acc[brand._id] = brand.name;\r\n-                return acc;\r\n-              }, {})\r\n-            );\r\n-            return;\r\n-          }\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+        setLoading(false);\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+          \r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        } finally {\r\n+          setLoading(false);\r\n         }\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/brands\");\r\n-        localStorage.setItem(\"brands\", JSON.stringify(data));\r\n-        setBrands(data);\r\n-      } catch (error) {\r\n-        console.error(\"Lỗi khi tải danh sách thương hiệu\", error);\r\n       }\r\n     };\r\n \r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const { data } = await axios.get(\"http://localhost:5000/api/products\");\r\n-        setProducts(data);\r\n-      } catch (error) {\r\n-        console.error(\"Lỗi khi tải danh sách sản phẩm\", error);\r\n-      }\r\n-    };\r\n-\r\n-    fetchBrands();\r\n-    fetchProducts();\r\n+    fetchData();\r\n   }, []);\r\n \r\n   const handleDelete = async (id) => {\r\n     try {\r\n"
                },
                {
                    "date": 1739798990265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \r\n const AdminProducts = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n   const [formData, setFormData] = useState({\r\n     name: \"\",\r\n     price: \"\",\r\n     brand: \"\",\r\n@@ -126,9 +127,9 @@\n               <td className=\"border p-2\">{product.price}</td>\r\n               <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{product.categories}</td>\r\n+              <td className=\"border p-2\">{categories[product.brand] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">\r\n                 <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n                 <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n"
                },
                {
                    "date": 1739798997500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n               <td className=\"border p-2\">{product.price}</td>\r\n               <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{categories[product.brand] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{categories[product.categorie] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">\r\n                 <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n                 <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n"
                },
                {
                    "date": 1739799016934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,142 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+        setLoading(false);\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+          \r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {Object.keys(brands).map((id) => (\r\n+            <option key={id} value={id}>{brands[id]}</option>\r\n+          ))}\r\n+        </select>\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">{categories[product.categories] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739799030665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,141 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+          \r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {Object.keys(brands).map((id) => (\r\n+            <option key={id} value={id}>{brands[id]}</option>\r\n+          ))}\r\n+        </select>\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">{categories[product.categories] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739799224930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,141 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+          \r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {Object.keys(brands).map((id) => (\r\n+            <option key={id} value={id}>{brands[id]}</option>\r\n+          ))}\r\n+        </select>\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">{categories[product.categories] || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739799252966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+\r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {Object.keys(brands).map((id) => (\r\n+            <option key={id} value={id}>{brands[id]}</option>\r\n+          ))}\r\n+        </select>\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">\r\n+                {product.categories.map((c) => c.name).join(\", \") || \"Không có loại\"}\r\n+              </td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739799270303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,149 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+\r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select\r\n+          className=\"border p-2 m-2\"\r\n+          value={formData.brand}\r\n+          onChange={(e) => setFormData({ ...formData, brand: e.target.value })}\r\n+          required\r\n+        >\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {brands.map((brand) => (\r\n+            <option key={brand._id} value={brand._id}>{brand.name}</option>\r\n+          ))}\r\n+        </select>\r\n+\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">\r\n+                {product.categories.map((c) => c.name).join(\", \") || \"Không có loại\"}\r\n+              </td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739799701418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,149 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      // Kiểm tra Local Storage trước khi gọi API\r\n+      const storedProducts = localStorage.getItem(\"products\");\r\n+      const storedBrands = localStorage.getItem(\"brands\");\r\n+      const storedCategories = localStorage.getItem(\"categories\");\r\n+\r\n+      if (storedProducts && storedBrands && storedCategories) {\r\n+        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n+        setProducts(JSON.parse(storedProducts));\r\n+        setBrands(JSON.parse(storedBrands));\r\n+        setCategories(JSON.parse(storedCategories));\r\n+      } else {\r\n+        try {\r\n+          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n+          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+          const productData = productRes.data;\r\n+          const brandData = brandRes.data;\r\n+          const categorieData = categorieRes.data;\r\n+\r\n+          setProducts(productData);\r\n+          setBrands(brandData);\r\n+          setCategories(categorieData);\r\n+          // Lưu vào Local Storage\r\n+          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n+          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n+          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n+\r\n+        } catch (error) {\r\n+          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+        }\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleDelete = async (id) => {\r\n+    try {\r\n+      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n+      setProducts(products.filter((product) => product._id !== id));\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleEdit = (product) => {\r\n+    setEditingProduct(product);\r\n+    setFormData(product);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select\r\n+          className=\"border p-2 m-2\"\r\n+          value={formData.brand}\r\n+          onChange={(e) => setFormData({ ...formData, brand: e.target.value })}\r\n+          required\r\n+        >\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {brands.map((brand) => (\r\n+            <option key={brand._id} value={brand._id}>{brand.name}</option>\r\n+          ))}\r\n+        </select>\r\n+\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+      <table className=\"w-full border border-collapse border-gray-300\">\r\n+        <thead>\r\n+          <tr className=\"bg-gray-200\">\r\n+            <th className=\"border p-2\">Tên sản phẩm</th>\r\n+            <th className=\"border p-2\">Giá</th>\r\n+            <th className=\"border p-2\">Hãng</th>\r\n+            <th className=\"border p-2\">Kho hàng</th>\r\n+            <th className=\"border p-2\">Xuất xứ</th>\r\n+            <th className=\"border p-2\">Phân loại</th>\r\n+            <th className=\"border p-2\">Hành động</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {products.map((product) => (\r\n+            <tr key={product._id} className=\"text-center\">\r\n+              <td className=\"border p-2\">{product.name}</td>\r\n+              <td className=\"border p-2\">{product.price}</td>\r\n+              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n+              <td className=\"border p-2\">{product.quantity}</td>\r\n+              <td className=\"border p-2\">{product.madein}</td>\r\n+              <td className=\"border p-2\">\r\n+                {product.categories.map((c) => c.name).join(\", \") || \"Không có loại\"}\r\n+              </td>\r\n+              <td className=\"border p-2\">\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+              </td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\r\n"
                },
                {
                    "date": 1739801294988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,883 +127,35 @@\n           {products.map((product) => (\r\n             <tr key={product._id} className=\"text-center\">\r\n               <td className=\"border p-2\">{product.name}</td>\r\n               <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">\r\n-                {product.categories.map((c) => c.name).join(\", \") || \"Không có loại\"}\r\n-              </td>\r\n-              <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n-};\r\n \r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState([]);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    price: \"\",\r\n-    brand: \"\",\r\n-    quantity: \"\",\r\n-    madein: \"\",\r\n-  });\r\n-  const [editingProduct, setEditingProduct] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      // Kiểm tra Local Storage trước khi gọi API\r\n-      const storedProducts = localStorage.getItem(\"products\");\r\n-      const storedBrands = localStorage.getItem(\"brands\");\r\n-      const storedCategories = localStorage.getItem(\"categories\");\r\n-\r\n-      if (storedProducts && storedBrands && storedCategories) {\r\n-        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n-        setProducts(JSON.parse(storedProducts));\r\n-        setBrands(JSON.parse(storedBrands));\r\n-        setCategories(JSON.parse(storedCategories));\r\n-      } else {\r\n-        try {\r\n-          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n-          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n-          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n-\r\n-          const productData = productRes.data;\r\n-          const brandData = brandRes.data;\r\n-          const categorieData = categorieRes.data;\r\n-\r\n-          setProducts(productData);\r\n-          setBrands(brandData);\r\n-          setCategories(categorieData);\r\n-          // Lưu vào Local Storage\r\n-          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n-          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n-          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n-\r\n-        } catch (error) {\r\n-          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n-        }\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const handleDelete = async (id) => {\r\n-    try {\r\n-      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n-      setProducts(products.filter((product) => product._id !== id));\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      if (editingProduct) {\r\n-        const { data } = await axios.put(\r\n-          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n-          formData\r\n-        );\r\n-        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n-      } else {\r\n-        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n-        setProducts([...products, data]);\r\n-      }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n-      setEditingProduct(null);\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleEdit = (product) => {\r\n-    setEditingProduct(product);\r\n-    setFormData(product);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n-        <select\r\n-          className=\"border p-2 m-2\"\r\n-          value={formData.brand}\r\n-          onChange={(e) => setFormData({ ...formData, brand: e.target.value })}\r\n-          required\r\n-        >\r\n-          <option value=\"\">Chọn hãng</option>\r\n-          {brands.map((brand) => (\r\n-            <option key={brand._id} value={brand._id}>{brand.name}</option>\r\n-          ))}\r\n-        </select>\r\n-\r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n-          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n-        </button>\r\n-      </form>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Phân loại</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n+              {/* Tìm tên brand từ mảng brands */}\r\n               <td className=\"border p-2\">\r\n-                {product.categories.map((c) => c.name).join(\", \") || \"Không có loại\"}\r\n+                {brands.find((brand) => brand._id === product.brand)?.name || \"Không có hãng\"}\r\n               </td>\r\n-              <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n-};\r\n \r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState([]);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    price: \"\",\r\n-    brand: \"\",\r\n-    quantity: \"\",\r\n-    madein: \"\",\r\n-  });\r\n-  const [editingProduct, setEditingProduct] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      // Kiểm tra Local Storage trước khi gọi API\r\n-      const storedProducts = localStorage.getItem(\"products\");\r\n-      const storedBrands = localStorage.getItem(\"brands\");\r\n-      const storedCategories = localStorage.getItem(\"categories\");\r\n-\r\n-      if (storedProducts && storedBrands && storedCategories) {\r\n-        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n-        setProducts(JSON.parse(storedProducts));\r\n-        setBrands(JSON.parse(storedBrands));\r\n-        setCategories(JSON.parse(storedCategories));\r\n-      } else {\r\n-        try {\r\n-          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n-          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n-          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n-\r\n-          const productData = productRes.data;\r\n-          const brandData = brandRes.data;\r\n-          const categorieData = categorieRes.data;\r\n-\r\n-          setProducts(productData);\r\n-          setBrands(brandData);\r\n-          setCategories(categorieData);\r\n-          // Lưu vào Local Storage\r\n-          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n-          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n-          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n-\r\n-        } catch (error) {\r\n-          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n-        }\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const handleDelete = async (id) => {\r\n-    try {\r\n-      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n-      setProducts(products.filter((product) => product._id !== id));\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      if (editingProduct) {\r\n-        const { data } = await axios.put(\r\n-          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n-          formData\r\n-        );\r\n-        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n-      } else {\r\n-        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n-        setProducts([...products, data]);\r\n-      }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n-      setEditingProduct(null);\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleEdit = (product) => {\r\n-    setEditingProduct(product);\r\n-    setFormData(product);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n-        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n-          <option value=\"\">Chọn hãng</option>\r\n-          {Object.keys(brands).map((id) => (\r\n-            <option key={id} value={id}>{brands[id]}</option>\r\n-          ))}\r\n-        </select>\r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n-          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n-        </button>\r\n-      </form>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Phân loại</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">\r\n-                {product.categories.map((c) => c.name).join(\", \") || \"Không có loại\"}\r\n-              </td>\r\n-              <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n-};\r\n \r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState([]);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    price: \"\",\r\n-    brand: \"\",\r\n-    quantity: \"\",\r\n-    madein: \"\",\r\n-  });\r\n-  const [editingProduct, setEditingProduct] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      // Kiểm tra Local Storage trước khi gọi API\r\n-      const storedProducts = localStorage.getItem(\"products\");\r\n-      const storedBrands = localStorage.getItem(\"brands\");\r\n-      const storedCategories = localStorage.getItem(\"categories\");\r\n-\r\n-      if (storedProducts && storedBrands && storedCategories) {\r\n-        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n-        setProducts(JSON.parse(storedProducts));\r\n-        setBrands(JSON.parse(storedBrands));\r\n-        setCategories(JSON.parse(storedCategories));\r\n-      } else {\r\n-        try {\r\n-          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n-          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n-          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n-\r\n-          const productData = productRes.data;\r\n-          const brandData = brandRes.data;\r\n-          const categorieData = categorieRes.data;\r\n-          \r\n-          setProducts(productData);\r\n-          setBrands(brandData);\r\n-          setCategories(categorieData);\r\n-          // Lưu vào Local Storage\r\n-          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n-          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n-          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n-\r\n-        } catch (error) {\r\n-          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n-        }\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const handleDelete = async (id) => {\r\n-    try {\r\n-      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n-      setProducts(products.filter((product) => product._id !== id));\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      if (editingProduct) {\r\n-        const { data } = await axios.put(\r\n-          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n-          formData\r\n-        );\r\n-        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n-      } else {\r\n-        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n-        setProducts([...products, data]);\r\n-      }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n-      setEditingProduct(null);\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleEdit = (product) => {\r\n-    setEditingProduct(product);\r\n-    setFormData(product);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n-        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n-          <option value=\"\">Chọn hãng</option>\r\n-          {Object.keys(brands).map((id) => (\r\n-            <option key={id} value={id}>{brands[id]}</option>\r\n-          ))}\r\n-        </select>\r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n-          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n-        </button>\r\n-      </form>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Phân loại</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{product.brand?.name || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{categories[product.categories] || \"Không có hãng\"}</td>\r\n+              {/* Tìm tên category từ mảng categories */}\r\n               <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+                {product.categories.map((categoryId) => {\r\n+                  const category = categories.find((cat) => cat._id === categoryId);\r\n+                  return category ? category.name : \"Không có loại\";\r\n+                }).join(\", \")}\r\n               </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n-};\r\n \r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState([]);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    price: \"\",\r\n-    brand: \"\",\r\n-    quantity: \"\",\r\n-    madein: \"\",\r\n-  });\r\n-  const [editingProduct, setEditingProduct] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      // Kiểm tra Local Storage trước khi gọi API\r\n-      const storedProducts = localStorage.getItem(\"products\");\r\n-      const storedBrands = localStorage.getItem(\"brands\");\r\n-      const storedCategories = localStorage.getItem(\"categories\");\r\n-\r\n-      if (storedProducts && storedBrands && storedCategories) {\r\n-        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n-        setProducts(JSON.parse(storedProducts));\r\n-        setBrands(JSON.parse(storedBrands));\r\n-        setCategories(JSON.parse(storedCategories));\r\n-      } else {\r\n-        try {\r\n-          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n-          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n-          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n-\r\n-          const productData = productRes.data;\r\n-          const brandData = brandRes.data;\r\n-          const categorieData = categorieRes.data;\r\n-          \r\n-          setProducts(productData);\r\n-          setBrands(brandData);\r\n-          setCategories(categorieData);\r\n-          // Lưu vào Local Storage\r\n-          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n-          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n-          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n-\r\n-        } catch (error) {\r\n-          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n-        }\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const handleDelete = async (id) => {\r\n-    try {\r\n-      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n-      setProducts(products.filter((product) => product._id !== id));\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      if (editingProduct) {\r\n-        const { data } = await axios.put(\r\n-          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n-          formData\r\n-        );\r\n-        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n-      } else {\r\n-        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n-        setProducts([...products, data]);\r\n-      }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n-      setEditingProduct(null);\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleEdit = (product) => {\r\n-    setEditingProduct(product);\r\n-    setFormData(product);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n-        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n-          <option value=\"\">Chọn hãng</option>\r\n-          {Object.keys(brands).map((id) => (\r\n-            <option key={id} value={id}>{brands[id]}</option>\r\n-          ))}\r\n-        </select>\r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n-          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n-        </button>\r\n-      </form>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Phân loại</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{categories[product.categories] || \"Không có hãng\"}</td>\r\n               <td className=\"border p-2\">\r\n                 <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n                 <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n               </td>\r\n             </tr>\r\n           ))}\r\n         </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n-};\r\n \r\n-export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState([]);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    price: \"\",\r\n-    brand: \"\",\r\n-    quantity: \"\",\r\n-    madein: \"\",\r\n-  });\r\n-  const [editingProduct, setEditingProduct] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      // Kiểm tra Local Storage trước khi gọi API\r\n-      const storedProducts = localStorage.getItem(\"products\");\r\n-      const storedBrands = localStorage.getItem(\"brands\");\r\n-      const storedCategories = localStorage.getItem(\"categories\");\r\n-\r\n-      if (storedProducts && storedBrands && storedCategories) {\r\n-        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n-        setProducts(JSON.parse(storedProducts));\r\n-        setBrands(JSON.parse(storedBrands));\r\n-        setCategories(JSON.parse(storedCategories));\r\n-        setLoading(false);\r\n-      } else {\r\n-        try {\r\n-          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n-          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n-          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n-\r\n-          const productData = productRes.data;\r\n-          const brandData = brandRes.data;\r\n-          const categorieData = categorieRes.data;\r\n-          \r\n-          setProducts(productData);\r\n-          setBrands(brandData);\r\n-          setCategories(categorieData);\r\n-          // Lưu vào Local Storage\r\n-          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n-          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n-          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n-\r\n-        } catch (error) {\r\n-          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n-        }\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const handleDelete = async (id) => {\r\n-    try {\r\n-      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n-      setProducts(products.filter((product) => product._id !== id));\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      if (editingProduct) {\r\n-        const { data } = await axios.put(\r\n-          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n-          formData\r\n-        );\r\n-        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n-      } else {\r\n-        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n-        setProducts([...products, data]);\r\n-      }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n-      setEditingProduct(null);\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleEdit = (product) => {\r\n-    setEditingProduct(product);\r\n-    setFormData(product);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n-        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n-          <option value=\"\">Chọn hãng</option>\r\n-          {Object.keys(brands).map((id) => (\r\n-            <option key={id} value={id}>{brands[id]}</option>\r\n-          ))}\r\n-        </select>\r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n-          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n-        </button>\r\n-      </form>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Phân loại</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{categories[product.categories] || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n       </table>\r\n     </div>\r\n   );\r\n };\r\n \r\n export default AdminProducts;\r\n-import axios from \"axios\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-\r\n-const AdminProducts = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [brands, setBrands] = useState([]);\r\n-  const [categories, setCategories] = useState([]);\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    price: \"\",\r\n-    brand: \"\",\r\n-    quantity: \"\",\r\n-    madein: \"\",\r\n-  });\r\n-  const [editingProduct, setEditingProduct] = useState(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      // Kiểm tra Local Storage trước khi gọi API\r\n-      const storedProducts = localStorage.getItem(\"products\");\r\n-      const storedBrands = localStorage.getItem(\"brands\");\r\n-      const storedCategories = localStorage.getItem(\"categories\");\r\n-\r\n-      if (storedProducts && storedBrands && storedCategories) {\r\n-        console.log(\"Dữ liệu lấy từ Local Storage\");\r\n-        setProducts(JSON.parse(storedProducts));\r\n-        setBrands(JSON.parse(storedBrands));\r\n-        setCategories(JSON.parse(storedCategories));\r\n-        setLoading(false);\r\n-      } else {\r\n-        try {\r\n-          const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n-          const brandRes = await axios.get(\"http://localhost:5000/api/brands\"); // Lấy danh sách brands\r\n-          const categorieRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n-\r\n-          const productData = productRes.data;\r\n-          const brandData = brandRes.data;\r\n-          const categorieData = categorieRes.data;\r\n-          \r\n-          setProducts(productData);\r\n-          setBrands(brandData);\r\n-          setCategories(categorieData);\r\n-          // Lưu vào Local Storage\r\n-          localStorage.setItem(\"products\", JSON.stringify(productData));\r\n-          localStorage.setItem(\"brands\", JSON.stringify(brandData));\r\n-          localStorage.setItem(\"categories\", JSON.stringify(categorieData));\r\n-\r\n-        } catch (error) {\r\n-          console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n-        } finally {\r\n-          setLoading(false);\r\n-        }\r\n-      }\r\n-    };\r\n-\r\n-    fetchData();\r\n-  }, []);\r\n-\r\n-  const handleDelete = async (id) => {\r\n-    try {\r\n-      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n-      setProducts(products.filter((product) => product._id !== id));\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi xóa sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      if (editingProduct) {\r\n-        const { data } = await axios.put(\r\n-          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n-          formData\r\n-        );\r\n-        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n-      } else {\r\n-        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n-        setProducts([...products, data]);\r\n-      }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n-      setEditingProduct(null);\r\n-    } catch (error) {\r\n-      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n-    }\r\n-  };\r\n-\r\n-  const handleEdit = (product) => {\r\n-    setEditingProduct(product);\r\n-    setFormData(product);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n-      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n-        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n-          <option value=\"\">Chọn hãng</option>\r\n-          {Object.keys(brands).map((id) => (\r\n-            <option key={id} value={id}>{brands[id]}</option>\r\n-          ))}\r\n-        </select>\r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n-          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n-        </button>\r\n-      </form>\r\n-      <table className=\"w-full border border-collapse border-gray-300\">\r\n-        <thead>\r\n-          <tr className=\"bg-gray-200\">\r\n-            <th className=\"border p-2\">Tên sản phẩm</th>\r\n-            <th className=\"border p-2\">Giá</th>\r\n-            <th className=\"border p-2\">Hãng</th>\r\n-            <th className=\"border p-2\">Kho hàng</th>\r\n-            <th className=\"border p-2\">Xuất xứ</th>\r\n-            <th className=\"border p-2\">Phân loại</th>\r\n-            <th className=\"border p-2\">Hành động</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n-              <td className=\"border p-2\">{brands[product.brand] || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n-              <td className=\"border p-2\">{categories[product.categorie] || \"Không có hãng\"}</td>\r\n-              <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminProducts;\r\n"
                },
                {
                    "date": 1739801336279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,37 +123,40 @@\n             <th className=\"border p-2\">Hành động</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n-          {products.map((product) => (\r\n-            <tr key={product._id} className=\"text-center\">\r\n-              <td className=\"border p-2\">{product.name}</td>\r\n-              <td className=\"border p-2\">{product.price}</td>\r\n+  {products.map((product) => (\r\n+    <tr key={product._id} className=\"text-center\">\r\n+      <td className=\"border p-2\">{product.name}</td>\r\n+      <td className=\"border p-2\">{product.price}</td>\r\n+      \r\n+      {/* Tìm tên brand từ mảng brands */}\r\n+      <td className=\"border p-2\">\r\n+        {brands.find((brand) => brand._id === product.brand)?.name || \"Không có hãng\"}\r\n+      </td>\r\n+      \r\n+      <td className=\"border p-2\">{product.quantity}</td>\r\n+      <td className=\"border p-2\">{product.madein}</td>\r\n+      \r\n+      {/* Tìm tên các category từ mảng categories */}\r\n+      <td className=\"border p-2\">\r\n+        {product.categories\r\n+          .map((categoryId) => {\r\n+            const category = categories.find((cat) => cat._id === categoryId);\r\n+            return category ? category.name : \"Không có loại\";\r\n+          })\r\n+          .join(\", \")}\r\n+      </td>\r\n+      \r\n+      <td className=\"border p-2\">\r\n+        <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n+        <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+      </td>\r\n+    </tr>\r\n+  ))}\r\n+</tbody>\r\n \r\n-              {/* Tìm tên brand từ mảng brands */}\r\n-              <td className=\"border p-2\">\r\n-                {brands.find((brand) => brand._id === product.brand)?.name || \"Không có hãng\"}\r\n-              </td>\r\n \r\n-              <td className=\"border p-2\">{product.quantity}</td>\r\n-              <td className=\"border p-2\">{product.madein}</td>\r\n-\r\n-              {/* Tìm tên category từ mảng categories */}\r\n-              <td className=\"border p-2\">\r\n-                {product.categories.map((categoryId) => {\r\n-                  const category = categories.find((cat) => cat._id === categoryId);\r\n-                  return category ? category.name : \"Không có loại\";\r\n-                }).join(\", \")}\r\n-              </td>\r\n-\r\n-              <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n-              </td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-\r\n       </table>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1739801868364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n     price: \"\",\r\n     brand: \"\",\r\n     quantity: \"\",\r\n     madein: \"\",\r\n+    categories: [], // Thêm categories vào formData để chọn nhiều loại\r\n   });\r\n   const [editingProduct, setEditingProduct] = useState(null);\r\n \r\n   useEffect(() => {\r\n@@ -74,26 +75,47 @@\n       } else {\r\n         const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n         setProducts([...products, data]);\r\n       }\r\n-      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\" });\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\", categories: [] });\r\n       setEditingProduct(null);\r\n     } catch (error) {\r\n       console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n     }\r\n   };\r\n \r\n   const handleEdit = (product) => {\r\n     setEditingProduct(product);\r\n-    setFormData(product);\r\n+    setFormData({\r\n+      name: product.name,\r\n+      price: product.price,\r\n+      brand: product.brand,\r\n+      quantity: product.quantity,\r\n+      madein: product.madein,\r\n+      categories: product.categories, // Đảm bảo categories được điền đúng\r\n+    });\r\n   };\r\n \r\n   return (\r\n     <div className=\"container mx-auto p-6\">\r\n       <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n       <form onSubmit={handleSubmit} className=\"mb-4\">\r\n-        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n-        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Tên sản phẩm\"\r\n+          className=\"border p-2 m-2\"\r\n+          value={formData.name}\r\n+          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"number\"\r\n+          placeholder=\"Giá\"\r\n+          className=\"border p-2 m-2\"\r\n+          value={formData.price}\r\n+          onChange={(e) => setFormData({ ...formData, price: e.target.value })}\r\n+          required\r\n+        />\r\n         <select\r\n           className=\"border p-2 m-2\"\r\n           value={formData.brand}\r\n           onChange={(e) => setFormData({ ...formData, brand: e.target.value })}\r\n@@ -104,10 +126,42 @@\n             <option key={brand._id} value={brand._id}>{brand.name}</option>\r\n           ))}\r\n         </select>\r\n \r\n-        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n-        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+        <input\r\n+          type=\"number\"\r\n+          placeholder=\"Kho hàng\"\r\n+          className=\"border p-2 m-2\"\r\n+          value={formData.quantity}\r\n+          onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\r\n+          required\r\n+        />\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Xuất xứ\"\r\n+          className=\"border p-2 m-2\"\r\n+          value={formData.madein}\r\n+          onChange={(e) => setFormData({ ...formData, madein: e.target.value })}\r\n+          required\r\n+        />\r\n+\r\n+        {/* Thêm trường chọn nhiều categories */}\r\n+        <select\r\n+          className=\"border p-2 m-2\"\r\n+          multiple\r\n+          value={formData.categories}\r\n+          onChange={(e) => {\r\n+            const selectedCategories = Array.from(e.target.selectedOptions, option => option.value);\r\n+            setFormData({ ...formData, categories: selectedCategories });\r\n+          }}\r\n+        >\r\n+          {categories.map((category) => (\r\n+            <option key={category._id} value={category._id}>\r\n+              {category.name}\r\n+            </option>\r\n+          ))}\r\n+        </select>\r\n+\r\n         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n           {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n         </button>\r\n       </form>\r\n@@ -127,36 +181,32 @@\n           {products.map((product) => (\r\n             <tr key={product._id} className=\"text-center\">\r\n               <td className=\"border p-2\">{product.name}</td>\r\n               <td className=\"border p-2\">{product.price}</td>\r\n-\r\n-              {/* Tìm tên brand từ mảng brands */}\r\n               <td className=\"border p-2\">\r\n                 {brands.find((brand) => brand._id === product.brand)?.name || \"Không có hãng\"}\r\n               </td>\r\n-\r\n               <td className=\"border p-2\">{product.quantity}</td>\r\n               <td className=\"border p-2\">{product.madein}</td>\r\n-\r\n-              {/* Tìm tên các category từ mảng categories */}\r\n               <td className=\"border p-2\">\r\n                 {product.categories\r\n                   .map((categoryId) => {\r\n                     const category = categories.find((cat) => cat._id === categoryId);\r\n                     return category ? category.name : \"Không có loại\";\r\n                   })\r\n                   .join(\", \")}\r\n               </td>\r\n-\r\n               <td className=\"border p-2\">\r\n-                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">Sửa</button>\r\n-                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">Xóa</button>\r\n+                <button onClick={() => handleEdit(product)} className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\">\r\n+                  Sửa\r\n+                </button>\r\n+                <button onClick={() => handleDelete(product._id)} className=\"bg-red-500 text-white px-2 py-1 rounded\">\r\n+                  Xóa\r\n+                </button>\r\n               </td>\r\n             </tr>\r\n           ))}\r\n         </tbody>\r\n-\r\n-\r\n       </table>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1739801967460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+import axios from \"axios\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+\r\n+const AdminProducts = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [brands, setBrands] = useState([]);\r\n+  const [categories, setCategories] = useState([]);\r\n+  const [searchCategory, setSearchCategory] = useState(\"\");\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    price: \"\",\r\n+    brand: \"\",\r\n+    quantity: \"\",\r\n+    madein: \"\",\r\n+    categories: [],\r\n+  });\r\n+  const [editingProduct, setEditingProduct] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      try {\r\n+        const productRes = await axios.get(\"http://localhost:5000/api/products\");\r\n+        const brandRes = await axios.get(\"http://localhost:5000/api/brands\");\r\n+        const categoryRes = await axios.get(\"http://localhost:5000/api/categories\");\r\n+\r\n+        setProducts(productRes.data);\r\n+        setBrands(brandRes.data);\r\n+        setCategories(categoryRes.data);\r\n+      } catch (error) {\r\n+        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n+      }\r\n+    };\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+  const handleCategoryChange = (categoryId) => {\r\n+    setFormData((prev) => {\r\n+      const isSelected = prev.categories.includes(categoryId);\r\n+      return {\r\n+        ...prev,\r\n+        categories: isSelected\r\n+          ? prev.categories.filter((id) => id !== categoryId)\r\n+          : [...prev.categories, categoryId],\r\n+      };\r\n+    });\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      if (editingProduct) {\r\n+        const { data } = await axios.put(\r\n+          `http://localhost:5000/api/products/${editingProduct._id}`,\r\n+          formData\r\n+        );\r\n+        setProducts(products.map((p) => (p._id === editingProduct._id ? data : p)));\r\n+      } else {\r\n+        const { data } = await axios.post(\"http://localhost:5000/api/products\", formData);\r\n+        setProducts([...products, data]);\r\n+      }\r\n+      setFormData({ name: \"\", price: \"\", brand: \"\", quantity: \"\", madein: \"\", categories: [] });\r\n+      setEditingProduct(null);\r\n+    } catch (error) {\r\n+      console.error(\"Lỗi khi thêm/cập nhật sản phẩm\", error);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"container mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n+      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n+        <input type=\"text\" placeholder=\"Tên sản phẩm\" className=\"border p-2 m-2\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\r\n+        <input type=\"number\" placeholder=\"Giá\" className=\"border p-2 m-2\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} required />\r\n+        <select className=\"border p-2 m-2\" value={formData.brand} onChange={(e) => setFormData({ ...formData, brand: e.target.value })} required>\r\n+          <option value=\"\">Chọn hãng</option>\r\n+          {brands.map((brand) => (\r\n+            <option key={brand._id} value={brand._id}>{brand.name}</option>\r\n+          ))}\r\n+        </select>\r\n+        <input type=\"number\" placeholder=\"Kho hàng\" className=\"border p-2 m-2\" value={formData.quantity} onChange={(e) => setFormData({ ...formData, quantity: e.target.value })} required />\r\n+        <input type=\"text\" placeholder=\"Xuất xứ\" className=\"border p-2 m-2\" value={formData.madein} onChange={(e) => setFormData({ ...formData, madein: e.target.value })} required />\r\n+\r\n+        {/* Ô tìm kiếm danh mục */}\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Tìm kiếm loại sản phẩm\"\r\n+          className=\"border p-2 m-2\"\r\n+          value={searchCategory}\r\n+          onChange={(e) => setSearchCategory(e.target.value)}\r\n+        />\r\n+        \r\n+        {/* Danh sách checkbox cho category */}\r\n+        <div className=\"border p-2 m-2 max-h-40 overflow-y-auto\">\r\n+          {categories\r\n+            .filter((cat) => cat.name.toLowerCase().includes(searchCategory.toLowerCase()))\r\n+            .map((category) => (\r\n+              <label key={category._id} className=\"block\">\r\n+                <input\r\n+                  type=\"checkbox\"\r\n+                  value={category._id}\r\n+                  checked={formData.categories.includes(category._id)}\r\n+                  onChange={() => handleCategoryChange(category._id)}\r\n+                />\r\n+                {category.name}\r\n+              </label>\r\n+            ))}\r\n+        </div>\r\n+\r\n+        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n+          {editingProduct ? \"Cập nhật\" : \"Thêm\"}\r\n+        </button>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminProducts;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1739376852961,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\n\r\nconst AdminProducts = () => {\r\n  const [products, setProducts] = useState([\r\n    { id: 1, name: \"Lốp xe Honda\", price: \"500,000 VND\", stock: 10 },\r\n    { id: 2, name: \"Phanh đĩa Honda\", price: \"300,000 VND\", stock: 5 },\r\n  ]);\r\n  const [newProduct, setNewProduct] = useState({ name: \"\", price: \"\", stock: \"\" });\r\n\r\n  const handleAddProduct = () => {\r\n    if (!newProduct.name || !newProduct.price || !newProduct.stock) return;\r\n    setProducts([...products, { id: products.length + 1, ...newProduct }]);\r\n    setNewProduct({ name: \"\", price: \"\", stock: \"\" });\r\n  };\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    setProducts(products.filter((product) => product.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Quản lý Sản phẩm</h1>\r\n      <table className=\"w-full border border-collapse border-gray-300\">\r\n        <thead>\r\n          <tr className=\"bg-gray-200\">\r\n            <th className=\"border p-2\">ID</th>\r\n            <th className=\"border p-2\">Tên sản phẩm</th>\r\n            <th className=\"border p-2\">Giá</th>\r\n            <th className=\"border p-2\">Kho hàng</th>\r\n            <th className=\"border p-2\">Hành động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id} className=\"text-center\">\r\n              <td className=\"border p-2\">{product.id}</td>\r\n              <td className=\"border p-2\">{product.name}</td>\r\n              <td className=\"border p-2\">{product.price}</td>\r\n              <td className=\"border p-2\">{product.stock}</td>\r\n              <td className=\"border p-2\">\r\n                <button\r\n                  onClick={() => handleDeleteProduct(product.id)}\r\n                  className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Xóa\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Tên sản phẩm\"\r\n          value={newProduct.name}\r\n          onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Giá\"\r\n          value={newProduct.price}\r\n          onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Kho hàng\"\r\n          value={newProduct.stock}\r\n          onChange={(e) => setNewProduct({ ...newProduct, stock: e.target.value })}\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <button\r\n          onClick={handleAddProduct}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Thêm sản phẩm\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProducts;\r\n"
        }
    ]
}